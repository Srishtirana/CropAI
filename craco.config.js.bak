const webpack = require('webpack');
const path = require('path');

module.exports = {
  webpack: {
    configure: (webpackConfig, { env, paths }) => {
      // Add fallback for Node.js core modules
      const fallback = webpackConfig.resolve.fallback || {};
      
      Object.assign(fallback, {
        "crypto": require.resolve("crypto-browserify"),
        "stream": require.resolve("stream-browserify"),
        "assert": require.resolve("assert"),
        "http": require.resolve("stream-http"),
        "https": require.resolve("https-browserify"),
        "os": require.resolve("os-browserify"),
        "url": require.resolve("url"),
        "path": require.resolve("path-browserify"),
        "buffer": require.resolve("buffer/"),
        "util": require.resolve("util/"),
        "process": require.resolve("process/browser")
      });
      
      webpackConfig.resolve.fallback = fallback;
      
      // Add plugins
      webpackConfig.plugins = (webpackConfig.plugins || []).concat([
        new webpack.ProvidePlugin({
          process: 'process/browser',
          Buffer: ['buffer', 'Buffer']
        })
      ]);
      
      // Add process to the externals
      webpackConfig.externals = webpackConfig.externals || {};
      
      // Add alias for process
      webpackConfig.resolve.alias = {
        ...webpackConfig.resolve.alias,
        'process/browser': require.resolve('process/browser')
      };
      
      // Add process to the mainFields to ensure it's picked up
      webpackConfig.resolve.mainFields = [
        'browser',
        'module',
        'main'
      ];
      
      return webpackConfig;
    }
  }
};
